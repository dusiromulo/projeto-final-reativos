#include "sdl.ceu"
#include "sdl-gfx.ceu"

input void SDL_QUIT;
input void SDL_REDRAW;
input int SDL_DT;
input _SDL_KeyboardEvent&& SDL_KEYDOWN;

#define TO_LEFT -1
#define TO_RIGHT -2

native do
    SDL_Renderer* REN = NULL;
    int REN_W, REN_H;
    ##define ID(x) x
end
native @pure _ID();


var _SDL_Window&? win;
    finalize
        win = &_SDL_CreateWindow("Qual a temperatura? BIRL",
                _SDL_WINDOWPOS_UNDEFINED, _SDL_WINDOWPOS_UNDEFINED,
                1024, 768, _SDL_WINDOW_SHOWN);
    with
        _SDL_DestroyWindow(&&win!);
    end

_SDL_GetWindowSize(&&win!, &&_REN_W, &&_REN_H);

finalize
    _REN = _SDL_CreateRenderer(&&win!, -1, 0);
with
    _SDL_DestroyRenderer(_REN);
end

_TTF_Init();
    finalize with
        _TTF_Quit();
    end

native do
    SDL_Texture *TEX_FLOOR, *TEX_CHARACTER_LEFT, *TEX_CHARACTER_RIGHT, *TEX_DOOR;
    TTF_Font *font;
    FILE *fileRooms;
    char line[100];
end
    finalize
        _TEX_FLOOR = _IMG_LoadTexture(_REN, "floor.png");
    with
        _SDL_DestroyTexture(_TEX_FLOOR);
    end
    finalize
        _TEX_DOOR = _IMG_LoadTexture(_REN, "door.png");
    with
        _SDL_DestroyTexture(_TEX_DOOR);
    end

    finalize
        _TEX_CHARACTER_LEFT = _IMG_LoadTexture(_REN, "char_l.png");
    with
        _SDL_DestroyTexture(_TEX_CHARACTER_LEFT);
    end
    finalize
        _TEX_CHARACTER_RIGHT = _IMG_LoadTexture(_REN, "char_r.png");
    with
        _SDL_DestroyTexture(_TEX_CHARACTER_RIGHT);
    end

    finalize
        _font = _TTF_OpenFont("OpenSans.ttf", 20);
    with
        _TTF_CloseFont(_font);
    end
    finalize
        _fileRooms = _fopen("rooms.txt", "r");
    with
        _fclose(_fileRooms);
    end

class Bambam with
    var _SDL_Renderer& ren;
do
    var _SDL_Rect r = _SDL_Rect(487, 400, 50, 100);
    var int flip = 0;
    var int direction = TO_RIGHT;

    par do
        every key in SDL_KEYDOWN do
            if key:keysym.sym == _SDLK_UP then
                direction = direction;
            else/if key:keysym.sym == _SDLK_DOWN then
                direction = direction;
            else/if key:keysym.sym == _SDLK_LEFT then
                if direction == TO_RIGHT then
                    flip = 1;
                    direction = TO_LEFT;
                end
            else/if key:keysym.sym == _SDLK_RIGHT then
                if direction == TO_LEFT then
                    flip = 1;
                    direction = TO_RIGHT;
                end
            end
        end
    with
        every SDL_REDRAW do
            if direction == TO_RIGHT then
                _SDL_RenderCopy(&&ren, _TEX_CHARACTER_RIGHT, null, &&r);
            else
                _SDL_RenderCopy(&&ren, _TEX_CHARACTER_LEFT, null, &&r);
            end
        end
    end
end

class Door with
    var _SDL_Renderer& ren;
    var _SDL_Rect r;
    var char&& name; 
do
    var _SDL_Texture&? str_tex;
    var SDL_Rect str_r = SDL_Rect(r.x + 8, r.y + 40, 100, 30);

    var SDL_Color clr = SDL_Color(0x00, 0x00, 0x00, 0xFF);
    var _SDL_Surface&? sfc;
    finalize
        sfc = &_TTF_RenderText_Blended(_font, name, *(_SDL_Color&&)&&clr);
    with
        _SDL_FreeSurface(&&sfc!);
    end
    finalize
        str_tex = &_SDL_CreateTextureFromSurface(&&ren, &&sfc!);
    with
        _SDL_DestroyTexture(&&str_tex!);
    end

    var int stepOffset = 15;
    par do
        every key in SDL_KEYDOWN do
            if key:keysym.sym == _SDLK_LEFT then
                r.x = r.x + stepOffset;
                str_r.x = str_r.x + stepOffset;
            else/if key:keysym.sym == _SDLK_RIGHT then
                r.x = r.x - stepOffset;
                str_r.x = str_r.x - stepOffset;
            end
        end
    with
        every SDL_REDRAW do
            _SDL_RenderCopy(&&ren, _TEX_DOOR, null, &&r);
            _SDL_RenderCopy(&&ren, &&str_tex!, null, (_SDL_Rect&&)&&str_r);
        end
    end
end

par/or do
    every SDL_REDRAW do
        _SDL_SetRenderDrawColor(_REN, 0x11,0x00,0x00,0xFF);
        _SDL_RenderFillRect(_REN, null);
    end
with
    var _SDL_Rect rect_floor = _SDL_Rect(0, 468, 1024, 300);

    every SDL_REDRAW do
        _SDL_RenderCopy(_REN, _TEX_FLOOR, null, &&rect_floor);
    end
with 
    pool Door[] doors;

    var int doorOffset = 0;

    loop do
        if _fgets(_line, _sizeof(_line), _fileRooms) then
            _printf("%s\n", _line);
            spawn Door in doors with
                this.ren = &_ID(_REN);
                this.r = _SDL_Rect(0 + doorOffset, 168, 116, 300);
                this.name = _line;
            end;
            doorOffset = doorOffset + 200;
        else
            break;
        end
    end

    /*every v in A do
        fwrite(&v, ..., f);
    end*/

    /*spawn Door in doors with
        this.ren = &_ID(_REN);
        this.r = _SDL_Rect(0, 168, 116, 300);
        this.name = "Breno";
    end;*/

    var Bambam bambam with
        this.ren = &_ID(_REN);
    end;

    every SDL_REDRAW do
        // do nothing
    end
with
    every SDL_REDRAW do
        _SDL_RenderPresent(_REN);
    end
with
    await SDL_QUIT;
end

escape 0;
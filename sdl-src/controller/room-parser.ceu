native do
    char line[300];
    char roomNumberStr[4] = "aaaa";
    char teacherNameStr[20] = "aaaaaaaaaaaaaaaaaaa\0";
    int parentNode = 0;
    int childNode1 = 0, childNode2 = 0, childNode3 = 0, childNode4 = 0;
end

finalize
    _roomsFile = _fopen("assets/rooms.txt", "r");
with
    _fclose(_roomsFile);
end

class RoomParser with
	pool Room[]& rooms;
do
	var int doorOffset = 0;
	var int count = 0;
	loop do
		if _fscanf(_roomsFile, "%d %d %d %d %d - %s - %[^\n]\n", &&_parentNode, &&_childNode1, &&_childNode2, &&_childNode3, &&_childNode4, _roomNumberStr, _teacherNameStr) > 0 then
			
			spawn Room in rooms with
	            this.ren = &_ID(_REN);
	            this.r = _SDL_Rect(doorOffset, 95, 170, 373);
	            this.roomNumberRect = _SDL_Rect(doorOffset + 70, 155, 40, 30);
	            this.teacherNameRect = _SDL_Rect(doorOffset + 46, 175, 60, 30);
	            this.roomNumber = _roomNumberStr;
	            this.teacherName = _teacherNameStr;
	            this.state = OUT;
	            this.roomIndex = count;
	        end;

	        _strncpy(_roomsMap[count], _roomNumberStr, _strlen(_roomNumberStr));
	        _strncpy(_teachersMap[count], _teacherNameStr, _strlen(_teacherNameStr));
    		_parentNodeMap[count] = _parentNode;

	        count = count + 1;
	        doorOffset = doorOffset + 250;
	    else
	    	await 10s;
        end
        await 10ms;
    end

end
#include "sdl.ceu"
#include "sdl-gfx.ceu"
#include "views/scene.ceu"

native do
    SDL_Renderer* REN = NULL;
    int REN_W, REN_H;
    ##define ID(x) x
end
native @pure _ID();

var _SDL_Window&? win;
    finalize
        win = &_SDL_CreateWindow("Qual a temperatura? BIRL",
                _SDL_WINDOWPOS_UNDEFINED, _SDL_WINDOWPOS_UNDEFINED,
                1024, 768, _SDL_WINDOW_SHOWN);
    with
        _SDL_DestroyWindow(&&win!);
    end

_SDL_GetWindowSize(&&win!, &&_REN_W, &&_REN_H);

finalize
    _REN = _SDL_CreateRenderer(&&win!, -1, 0);
with
    _SDL_DestroyRenderer(_REN);
end

_TTF_Init();
	finalize with
	    _TTF_Quit();
	end

native do
	FILE *roomsFile;
    SDL_Texture *TEX_FLOOR, *TEX_WALL, 
                *TEX_CHARACTER_LEFT, *TEX_CHARACTER_RIGHT,
                *TEX_DOOR, *TEX_DOOR_FLIP;
    TTF_Font *font12, *font18;
    int parentNodeSelected = 0;
end

finalize
    _roomsFile = _fopen("assets/rooms.txt", "r");
with
    _fclose(_roomsFile);
end
finalize
    _TEX_FLOOR = _IMG_LoadTexture(_REN, "assets/images/floor.png");
with
    _SDL_DestroyTexture(_TEX_FLOOR);
end
finalize
    _TEX_DOOR = _IMG_LoadTexture(_REN, "assets/images/door.png");
with
    _SDL_DestroyTexture(_TEX_DOOR);
end
finalize
    _TEX_DOOR_FLIP = _IMG_LoadTexture(_REN, "assets/images/door_flip.png");
with
    _SDL_DestroyTexture(_TEX_DOOR_FLIP);
end
finalize
    _TEX_WALL = _IMG_LoadTexture(_REN, "assets/images/wall.png");
with
    _SDL_DestroyTexture(_TEX_WALL);
end

finalize
    _TEX_CHARACTER_LEFT = _IMG_LoadTexture(_REN, "assets/images/char_l.png");
with
    _SDL_DestroyTexture(_TEX_CHARACTER_LEFT);
end
finalize
    _TEX_CHARACTER_RIGHT = _IMG_LoadTexture(_REN, "assets/images/char_r.png");
with
    _SDL_DestroyTexture(_TEX_CHARACTER_RIGHT);
end

finalize
    _font12 = _TTF_OpenFont("assets/fonts/OpenSans.ttf", 12);
with
    _TTF_CloseFont(_font12);
end
finalize
    _font18 = _TTF_OpenFont("assets/fonts/OpenSans.ttf", 18);
with
    _TTF_CloseFont(_font18);
end

par/or do
	var Scene scene with end;

    every SDL_REDRAW do
        _SDL_RenderPresent(_REN);
    end
with
    await SDL_QUIT;
end

escape 0;